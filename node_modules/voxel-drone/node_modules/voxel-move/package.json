{
  "name": "voxel-move",
  "description": "Utility for rotation relative based movement in voxeljs",
  "version": "0.1.0",
  "homepage": "https://github.com/shama/voxel-move",
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shama/voxel-move.git"
  },
  "bugs": {
    "url": "https://github.com/shama/voxel-move/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shama/voxel-move/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "keywords": [
    "voxel"
  ],
  "readme": "# voxel-move\n\n> Utility for rotation relative based movement in [voxel.js](http://voxeljs.com).\n> This probably totally already exists but I needed it faster than I could\n> google for [voxel-drone](https://github.com/shama/voxel-drone).\n\n## example\n```js\nvar move = require('voxel-move')\n\n// this would be our item in voxel.js\nvar item = {\n  mesh: new game.THREE.Mesh( /* ... */ ),\n  velocity: {x: 0, y: 0, z: 0}\n}\n\n// move it forward\nmove(item).front(0.5)\n\n// rotate the item 90 degs\nitem.mesh.rotation.y = (Math.PI / 180) * 90\n\n// now! move forward in the direction the item is facing\nmove(item).front(0.5)\n```\n\nAll the methods are chainable. Only moves on XZ (maybe later if needed or if\nsomeone else cares we can add in Y).\n\n```js\nmove(item)\n  .front(0.5)\n  .back(0.5)\n  .left(0.5)\n  .right(0.5)\n  .rotate(Math.PI / 180 * 90)\n```\n\n## release history\n* 0.1.0 - initial release\n\n## license\nCopyright (c) 2013 Kyle Robinson Young<br/>\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "voxel-move@0.1.0",
  "_from": "voxel-move@~0.1.0"
}
