var HID = require('node-hid');
var createEngine = require('voxel-engine');

var devices = HID.devices();
//var path = devices[devices.length - 1].path;
//var ps3 = new HID.HID(path);
//var drone = arDrone.createClient();
//var ps3Stream = new HIDStream.device(path);

// create a world
var createEngine = require('voxel-engine');
var game = createEngine({
  generate: function(x, y, z) {
    return (Math.sqrt(x*x + y*y + z*z) > 20 || y*y > 10) ? 0 : (Math.random() * 2) + 1;
  },
  texturePath: './textures/',
  materials: ['dirt', 'grass']
});
var container = document.body;
game.appendTo(container);
container.addEventListener('click', function() {
  game.requestPointerLock(container);
});

// voxel-drone returns a function to create a drone
var createDrone = require('voxel-drone');

// create a drone / add to the game
var drone = createDrone(game);
game.addItem(drone.item());

/*
ps3.on('data', function(data) {
	var json = data.toJSON();

	if (data[3] === 128 && data[4] === 0) {
		console.log('Up');
	} else if (data[3] === 128 && data[4] === 255) {
		console.log('Down');
	} else if (data[3] === 0 && data[4] === 128) {
		console.log('Left');
	} else if (data[3] === 255 && data[4] === 128) {
		console.log('Right');
	} else if (data[0] === 1) {
		console.log('Triangle');
	} else if (data[0] === 2) {
		console.log('Circle');
	} else if (data[0] === 4) {
		console.log('X');
	} else if (data[0] === 8) {
		console.log('Square');
	} else if (data[3] === 128 && data[4] === 128) {
		//console.log('press some buttons');
	} else {
		console.log(json);
	}
});

ps3.on('error', function(err) {
	console.log(err);
});

/*
ps3Stream.on('data', function(data) {
	var keyCodes = data.keyCodes;
	console.log(keyCodes);
});
*/
